// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sonarqube

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-xyz/sdk/go/sonarqube/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a Sonarqube rule resource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-xyz/sdk/go/sonarqube"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sonarqube.LookupRule(ctx, &sonarqube.LookupRuleArgs{
//				Key: "squid:forbidSonar",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRule(ctx *pulumi.Context, args *LookupRuleArgs, opts ...pulumi.InvokeOption) (*LookupRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRuleResult
	err := ctx.Invoke("sonarqube:index/getRule:getRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRule.
type LookupRuleArgs struct {
	// The key of the sonarqube rule. Should be \n\n:\n\n. https://next.sonarqube.com/sonarqube/web_api/api/rules?query=api%2Frules%2Fcreate
	Key string `pulumi:"key"`
}

// A collection of values returned by getRule.
type LookupRuleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The key of the sonarqube rule. Should be \n\n:\n\n. https://next.sonarqube.com/sonarqube/web_api/api/rules?query=api%2Frules%2Fcreate
	Key string `pulumi:"key"`
	// Rule description
	MarkdownDescription string `pulumi:"markdownDescription"`
	// Rule name
	Name string `pulumi:"name"`
	// Rule severity
	Severity string `pulumi:"severity"`
	// Rule status
	Status string `pulumi:"status"`
	// Key of the template rule
	TemplateKey string `pulumi:"templateKey"`
	// Rule type
	Type string `pulumi:"type"`
}

func LookupRuleOutput(ctx *pulumi.Context, args LookupRuleOutputArgs, opts ...pulumi.InvokeOption) LookupRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRuleResultOutput, error) {
			args := v.(LookupRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sonarqube:index/getRule:getRule", args, LookupRuleResultOutput{}, options).(LookupRuleResultOutput), nil
		}).(LookupRuleResultOutput)
}

// A collection of arguments for invoking getRule.
type LookupRuleOutputArgs struct {
	// The key of the sonarqube rule. Should be \n\n:\n\n. https://next.sonarqube.com/sonarqube/web_api/api/rules?query=api%2Frules%2Fcreate
	Key pulumi.StringInput `pulumi:"key"`
}

func (LookupRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleArgs)(nil)).Elem()
}

// A collection of values returned by getRule.
type LookupRuleResultOutput struct{ *pulumi.OutputState }

func (LookupRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleResult)(nil)).Elem()
}

func (o LookupRuleResultOutput) ToLookupRuleResultOutput() LookupRuleResultOutput {
	return o
}

func (o LookupRuleResultOutput) ToLookupRuleResultOutputWithContext(ctx context.Context) LookupRuleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The key of the sonarqube rule. Should be \n\n:\n\n. https://next.sonarqube.com/sonarqube/web_api/api/rules?query=api%2Frules%2Fcreate
func (o LookupRuleResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.Key }).(pulumi.StringOutput)
}

// Rule description
func (o LookupRuleResultOutput) MarkdownDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.MarkdownDescription }).(pulumi.StringOutput)
}

// Rule name
func (o LookupRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Rule severity
func (o LookupRuleResultOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.Severity }).(pulumi.StringOutput)
}

// Rule status
func (o LookupRuleResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.Status }).(pulumi.StringOutput)
}

// Key of the template rule
func (o LookupRuleResultOutput) TemplateKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.TemplateKey }).(pulumi.StringOutput)
}

// Rule type
func (o LookupRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuleResultOutput{})
}
