"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.QualitygateUsergroupAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a Sonarqube Quality Gate Usergroup association resource. This can be used to associate a Quality Gate to an User or to a Group.
 * The feature is available on SonarQube 9.2 or newer.
 *
 * ## Example Usage
 *
 * ### Example: create a quality gate user association
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sonarqube from "@pulumi/sonarqube";
 *
 * const mainQualitygate = new sonarqube.Qualitygate("mainQualitygate", {conditions: [{
 *     metric: "new_coverage",
 *     op: "LT",
 *     threshold: "30",
 * }]});
 * const qaUser = new sonarqube.User("qaUser", {
 *     loginName: "qa-user",
 *     password: "secret-sauce37!",
 * });
 * const mainQualitygateUsergroupAssociation = new sonarqube.QualitygateUsergroupAssociation("mainQualitygateUsergroupAssociation", {
 *     gatename: mainQualitygate.id,
 *     loginName: qaUser.id,
 * });
 * ```
 *
 * ### Example: create a quality gate group association
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sonarqube from "@pulumi/sonarqube";
 *
 * const mainQualitygate = new sonarqube.Qualitygate("mainQualitygate", {conditions: [{
 *     metric: "new_coverage",
 *     op: "LT",
 *     threshold: "30",
 * }]});
 * const qaTeam = new sonarqube.Group("qaTeam", {description: "Quality Assurence Team"});
 * const mainQualitygateUsergroupAssociation = new sonarqube.QualitygateUsergroupAssociation("mainQualitygateUsergroupAssociation", {
 *     gatename: mainQualitygate.id,
 *     groupName: qaTeam.name,
 * });
 * ```
 */
class QualitygateUsergroupAssociation extends pulumi.CustomResource {
    /**
     * Get an existing QualitygateUsergroupAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new QualitygateUsergroupAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of QualitygateUsergroupAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QualitygateUsergroupAssociation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["gatename"] = state ? state.gatename : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["loginName"] = state ? state.loginName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.gatename === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatename'");
            }
            resourceInputs["gatename"] = args ? args.gatename : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["loginName"] = args ? args.loginName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QualitygateUsergroupAssociation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.QualitygateUsergroupAssociation = QualitygateUsergroupAssociation;
/** @internal */
QualitygateUsergroupAssociation.__pulumiType = 'sonarqube:index/qualitygateUsergroupAssociation:QualitygateUsergroupAssociation';
//# sourceMappingURL=qualitygateUsergroupAssociation.js.map