// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sonarqube
{
    public static class GetQualitygate
    {
        /// <summary>
        /// Use this data source to get a Sonarqube qualitygate resource
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sonarqube = Pulumi.Sonarqube;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Sonarqube.GetQualitygate.Invoke(new()
        ///     {
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetQualitygateResult> InvokeAsync(GetQualitygateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQualitygateResult>("sonarqube:index/getQualitygate:getQualitygate", args ?? new GetQualitygateArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a Sonarqube qualitygate resource
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sonarqube = Pulumi.Sonarqube;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Sonarqube.GetQualitygate.Invoke(new()
        ///     {
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQualitygateResult> Invoke(GetQualitygateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQualitygateResult>("sonarqube:index/getQualitygate:getQualitygate", args ?? new GetQualitygateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a Sonarqube qualitygate resource
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sonarqube = Pulumi.Sonarqube;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Sonarqube.GetQualitygate.Invoke(new()
        ///     {
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQualitygateResult> Invoke(GetQualitygateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetQualitygateResult>("sonarqube:index/getQualitygate:getQualitygate", args ?? new GetQualitygateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQualitygateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Quality Gate.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetQualitygateArgs()
        {
        }
        public static new GetQualitygateArgs Empty => new GetQualitygateArgs();
    }

    public sealed class GetQualitygateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Quality Gate.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetQualitygateInvokeArgs()
        {
        }
        public static new GetQualitygateInvokeArgs Empty => new GetQualitygateInvokeArgs();
    }


    [OutputType]
    public sealed class GetQualitygateResult
    {
        /// <summary>
        /// List of Quality Gate conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetQualitygateConditionResult> Conditions;
        /// <summary>
        /// Origin of the Quality Gate
        /// </summary>
        public readonly string CopyFrom;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Quality Gate default.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// The name of the Quality Gate.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetQualitygateResult(
            ImmutableArray<Outputs.GetQualitygateConditionResult> conditions,

            string copyFrom,

            string id,

            bool isDefault,

            string name)
        {
            Conditions = conditions;
            CopyFrom = copyFrom;
            Id = id;
            IsDefault = isDefault;
            Name = name;
        }
    }
}
